{"version":3,"sources":["assets/like.svg","card/card.js","fetch-pictures.js","App.js","index.js"],"names":["Card","props","date","description","media","title","url","useState","clicked","setClicked","className","src","alt","width","LikeIcon","style","filter","onClick","fetchPictures","a","axios","get","params","count","data","console","log","App","cardInfo","setCardInfo","useEffect","then","card","undefined","options","loop","autoplay","animationData","LoadingRocket","rendererSettings","preserveAspectRatio","height","map","explanation","media_type","ReactDOM","render","document","getElementById"],"mappings":"uOAAe,MAA0B,iC,gBCsD1BA,EA/CF,SAACC,GAAW,IAErBC,EAKED,EALFC,KACAC,EAIEF,EAJFE,YACAC,EAGEH,EAHFG,MACAC,EAEEJ,EAFFI,MACAC,EACEL,EADFK,IANoB,EASQC,oBAAS,GATjB,mBASfC,EATe,KASNC,EATM,KAuBtB,OACE,sBAAKC,UAAU,kBAAf,UAZc,UAAVN,EACO,qBAAKM,UAAU,cAAcC,IAAKL,EAAKM,IAAI,2BAEnC,UAAVR,EACE,cAAC,IAAD,CAAaM,UAAU,cAAcJ,IAAKA,EAAKO,MAAM,UAGvD,6EAOP,sBAAKH,UAAU,iBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAb,SAAsBL,IACtB,4BAAIH,OAEN,qBACES,IAAKG,EACLJ,UAAU,YACVE,IAAI,YACJG,MAAO,CAACC,OAAQR,EAAU,2FAA4F,QACtHS,QAAS,kBAAMR,GAAYD,SAG/B,mBAAGE,UAAU,cAAb,SAA4BP,W,0CCzCvBe,EAAa,uCAAG,8BAAAC,EAAA,4DACf,uFADe,kBAIFC,IAAMC,IAHnB,uFAG4B,CAAEC,OAAQ,CAAEC,MAAO,MAJhC,uBAIjBC,EAJiB,EAIjBA,KACRC,QAAQC,IAAI,aAAcF,GALD,kBAMlBA,GANkB,kCAQzBC,QAAQC,IAAR,MARyB,0DAAH,qD,QCsEXC,G,OAlEH,SAAC1B,GAAW,IAAD,EAEWM,mBAAS,MAFpB,mBAEdqB,EAFc,KAEJC,EAFI,KAIrBC,qBAAU,WACRZ,IACCa,MAAK,SAAAC,GACJH,EAAYG,QAEb,IAiDH,OACE,qBAAKtB,UAAU,oBAAf,SA/CIkB,IAAa,SAAmBK,IAAbL,GAAuC,OAAbA,EAE7C,sBAAKlB,UAAU,oBAAf,UACE,cAAC,IAAD,CACEwB,QAAS,CACPC,MAAM,EACNC,UAAU,EACVC,cAAeC,EACfC,iBAAkB,CAChBC,oBAAqB,mBAGzBC,OAAQ,IACR5B,MAAO,MAET,mBAAGH,UAAU,eAAb,kCAMF,gCACE,sBAAKA,UAAU,mBAAf,UACE,mBAAGA,UAAU,SAAb,0BACA,uGACA,iFAEA,qBAAKA,UAAU,sBAAf,SACGkB,EAASc,KAAI,SAACV,GACb,OACE,cAAC,EAAD,CACE9B,KAAM8B,EAAK9B,KACXC,YAAa6B,EAAKW,YAClBvC,MAAO4B,EAAKY,WACZvC,MAAO2B,EAAK3B,MACZC,IAAK0B,EAAK1B,kBCrD9BuC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.c8169cde.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/like.b16558c9.svg\";","import React, { useState } from 'react';\nimport ReactPlayer from 'react-player/youtube'\n\nimport LikeIcon from '../assets/like.svg';\n\nimport './style.scss';\n\nconst Card = (props) => {\n  const {\n    date,\n    description,\n    media,\n    title,\n    url,\n  } = props;\n\n  const [clicked, setClicked] = useState(false);\n\n  const renderImage = () => {\n    if (media === \"image\") {\n        return <img className=\"space-image\" src={url} alt=\"a cool space landscape\"/>\n    }\n    else if (media === \"video\") {\n        return <ReactPlayer className=\"space-image\" url={url} width=\"600px\"/>\n    }\n    else {\n      return <p>sorry, this media type is not yet supported!</p>\n    }\n  }\n\n  return (\n    <div className=\"card-background\">\n      {renderImage()}\n      <div className=\"text-container\">\n        <div className=\"upper-container\">\n          <div className=\"title-container\">\n            <p className=\"title\">{title}</p>\n            <p>{date}</p>\n          </div>\n          <img \n            src={LikeIcon} \n            className=\"like-icon\" \n            alt=\"like icon\" \n            style={{filter: clicked ? \"invert(53%) sepia(84%) saturate(5816%) hue-rotate(329deg) brightness(99%) contrast(100%)\": \"none\"}}\n            onClick={() => setClicked(!clicked)}\n            />\n        </div>\n        <p className=\"description\">{description}</p>\n      </div>\n    </div>\n  );\n\n};\n\nexport default Card;\n","import axios from 'axios';\n\n/**\n * @description fetch all picture data from NASA API\n * @return an array of 10 objects with images and information about them\n */\nexport const fetchPictures = async () => {\n  const url = \"https://api.nasa.gov/planetary/apod?api_key=FdkKlzz4ct2pPjPxgeqDAMbAca4sHde4DIhFEeOA\";\n\n  try {\n    const { data } = await axios.get(url, { params: { count: 10 } });\n    console.log('axios data', data)\n    return data;\n  } catch (error) {\n    console.log(error)\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport Lottie from 'react-lottie';\nimport Card from './card/card.js';\nimport { fetchPictures } from './fetch-pictures';\n\n// Animation Credits: Sakol Lalici\nimport LoadingRocket from './assets/rocket-loading.json';\n\nimport './style.scss';\n\nconst App = (props) => {\n\n  const [cardInfo, setCardInfo] = useState(null);\n\n  useEffect(() => {\n    fetchPictures()\n    .then(card => {\n      setCardInfo(card)\n    })\n  }, []);\n  \n  const displayContent = () => {\n    if (cardInfo === [] || cardInfo === undefined || cardInfo === null) {\n      return (\n        <div className=\"loading-container\">\n          <Lottie\n            options={{\n              loop: true,\n              autoplay: true,\n              animationData: LoadingRocket,\n              rendererSettings: {\n                preserveAspectRatio: 'xMidYMid slice',\n              },\n            }}\n            height={300}\n            width={300}\n          />\n          <p className=\"loading-text\">Loading images...</p>\n        </div>\n      );\n      \n    } else {\n      return (\n        <div>\n          <div className=\"header-container\">\n            <p className=\"header\">Spacestagram</p>\n            <p>Your one stop shop for all the fantastic and fabulous space landscapes</p>\n            <p>Information brought to you by NASA's APOD API</p>\n          </div>\n            <div className=\"all-cards-container\">\n              {cardInfo.map((card) => {\n                return (\n                  <Card\n                    date={card.date}\n                    description={card.explanation}\n                    media={card.media_type}\n                    title={card.title}\n                    url={card.url}\n                />\n                )\n              })}\n          </div>\n        </div>\n        \n      )\n    }\n  }\n\n  return (\n    <div className=\"content-container\">\n      {displayContent()}\n\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}